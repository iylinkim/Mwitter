{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Comment.js","components/Comments.js","components/User.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Post.js","routes/Account.js","components/ToggleBtn.js","components/Router.js","components/App.js","imageUploader.js","components/ImageFileInput.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","darkMode","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Comment","each_comment","displayName","comment","Comments","nweetObj","userObj","isComments","setIsComments","commentRef","useRef","state","doc","id","update","comments","current","ref","Object","keys","map","key","User","history","useHistory","account","setAccount","directory","setDirectory","useEffect","location","pathname","src","photoURL","userPhoto","alt","username","userName","Nweet","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","delete","refFromURL","attachmentUrl","toggleEditing","autoFocus","to","userId","creatorId","Date","createdAt","toLocaleDateString","liked_users","includes","uid","like","NweetFactory","nweet","setNweet","attachment","setAttachment","fileRef","attachmentRef","child","uuidv4","putString","response","getDownloadURL","now","collection","add","maxLength","htmlFor","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","style","opacity","backgroundImage","Home","nweets","setNweets","onSnapshot","snapshot","nweetArray","docs","data","Navigation","Profile","ImageInput","refreshUser","setUserObj","newUserObj","setNewUserObj","getMyNweets","where","orderBy","get","updateProfile","signOut","push","Post","post_item","console","log","Account","userPost","setUserPost","forEach","post","getUserPost","ToggleBtn","setDarkMode","DARK","handleTheme","isDark","localStorage","setItem","ls_theme","JSON","parse","getItem","matchMedia","matches","e","AppRouter","isLoggedIn","routerRef","body","parentElement","classList","remove","exact","path","App","init","setInit","onAuthStateChanged","user","args","currentUser","Boolean","ImageUploader","file","formData","FormData","append","fetch","method","json","ImageFileInput","imageUploader","inputFileRef","darkTheme","onFileChange","upload","uploaded","url","click","ReactDOM","render","StrictMode","props","document","getElementById"],"mappings":"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","file":"static/js/main.5132e8e3.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DO,\n    projectId: process.env.REACT_APP_PROJECT,\n    storageBucket: process.env.REACT_APP_STORAGE,\n    messagingSenderId: process.env.REACT_APP_MESSAGI,\n    appId: process.env.REACT_APP_APP_ID\n  };\n\n  firebase.initializeApp(firebaseConfig); \n\n  export const firebaseInstance = firebase;\n\n  export const authService = firebase.auth();\n  export const dbService = firebase.firestore();\n  export const storageService = firebase.storage();\n  ","import { authService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst AuthForm = ({darkMode}) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState();\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        //create account\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        // log in\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => {\n    setNewAccount((prev) => !prev);\n  };\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className={darkMode? \"authInput dark\" : \"authInput\"}\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className={darkMode? \"authInput dark\" : \"authInput\"}\n        />\n        <input\n          className=\"authInput authSubmit\"\n          type=\"submit\"\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>{\" \"}\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React from \"react\";\nimport AuthForm from \"components/AuthForm\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport \"styles/auth.css\";\n\nconst Auth = ({darkMode}) => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n  return (\n    <div className=\"authContainer\">\n      <i className=\"fas fa-hippo hippo authLogo\"></i>\n      <AuthForm darkMode={darkMode}/>\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className={darkMode? \"authBtn dark\" : \"authBtn\"}>\n          <i className=\"fab fa-google\"></i>\n          <span className=\"authBtn_text\">Sign In with Google</span>\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className={darkMode? \"authBtn dark\" : \"authBtn\"}>\n          <i className=\"fab fa-github\"></i>\n          <span className=\"authBtn_text\">Sign In with Github</span>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import \"styles/comment.css\";\nconst Comment = ({ each_comment }) => {\n  return (\n    <li className=\"each_comment\">\n      <p className=\"comment_username\">{each_comment.displayName}</p>\n      {each_comment.comment}\n    </li>\n  );\n};\n\nexport default Comment;\n","import { dbService } from \"fbase\";\nimport { useRef, useState } from \"react\";\nimport Comment from \"./Comment\";\nimport \"styles/comments.css\";\n\nconst Comments = ({ nweetObj, userObj }) => {\n  const [isComments, setIsComments] = useState(false);\n  const commentRef = useRef();\n  const handleComment = () => {\n    setIsComments((state) => !state);\n  };\n  const onSubmit = () => {\n    dbService.doc(`nweets/${nweetObj.id}`).update({\n      comments: [\n        ...nweetObj.comments,\n        {\n          displayName: userObj.displayName,\n          comment: commentRef.current.value,\n        },\n      ],\n    });\n\n    commentRef.current.value = \"\";\n  };\n \n  return (\n    <>\n      <p className=\"comment_icon\" onClick={handleComment}>\n        <i className=\"far fa-comment-alt\"></i>\n      </p>\n      <div className=\"comments_box\">\n        {isComments && (\n          <>\n            <form className=\"add_comment\" onSubmit={onSubmit}>\n              <input\n                className=\"comment_input\"\n                ref={commentRef}\n                type=\"text\"\n                placeholder=\"Write Comment\"\n              />\n              <input className=\"comment_submit\" type=\"submit\" value=\"Add\" />\n            </form>\n            <ul className=\"comments_list\">\n              {nweetObj.comments &&\n                Object.keys(nweetObj.comments).map((key) => {\n                  return (\n                    <Comment\n                      key={key}\n                      each_comment={nweetObj.comments[key]}\n                      userObj={userObj}\n                    />\n                  );\n                })}\n            </ul>\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Comments;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport 'styles/user.css';\n\nconst User = ({ nweetObj }) => {\n  const history = useHistory();\n  const [account, setAccount] = useState({});\n  const [directory, setDirectory] = useState(\"\");\n\n  useEffect(() => {\n    if (history.location.state) {\n      setAccount(history.location.state);\n    }\n\n    if (history.location.pathname === \"/account\") {\n      setDirectory(() => \"account\");\n    }\n  }, []);\n\n  return (\n    <div className={`nweet_user ${directory}`}>\n      <p className=\"user_photo\">\n        <img\n          src={nweetObj ? nweetObj.photoURL : account.userPhoto}\n          alt={nweetObj ? nweetObj.username : account.userName}\n        />\n      </p>\n      <p className=\"user_name\">\n        {nweetObj ? nweetObj.username : account.userName}\n      </p>\n    </div>\n  );\n};\n\nexport default User;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport Comments from \"./Comments\";\nimport { Link } from \"react-router-dom\";\nimport \"styles/nweet.css\";\nimport User from \"./User\";\n\nconst Nweet = ({ nweetObj, userObj, isOwner, darkMode }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n    if (ok) {\n      //delete nweet\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\n    setEditing(false);\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n\n  const handleLike = () => {\n    if (!nweetObj.liked_users.includes(userObj.uid)) {\n      // like 버튼을 누르지 않았을 때\n      dbService.doc(`nweets/${nweetObj.id}`).update({\n        like: (nweetObj.like += 1),\n        liked_users: [...nweetObj.liked_users, userObj.uid],\n      });\n    }\n  };\n\n  return (\n    <li className={darkMode ? \"nweet dark\" : \"nweet\"}>\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            <input\n              className=\"formInput\"\n              onChange={onChange}\n              type=\"text\"\n              placeholder=\"Edit your nweet\"\n              value={newNweet}\n              autoFocus\n              required\n            />\n            <p className=\"formBtn_icon\">\n              <input\n                className=\" formBtn_text formBtn_text_update\"\n                type=\"submit\"\n                value=\"Update Nweet\"\n              />\n              <span className=\"editing_icon update\">\n                <i className=\"fas fa-pen\"></i>\n              </span>\n            </p>\n          </form>\n          <p className=\" cancelBtn formBtn_icon\" onClick={toggleEditing}>\n            <span className=\"formBtn_text formBtn_text_cancel\">Cancel</span>\n            <span className=\"editing_icon cancel\">\n              <i className=\"fas fa-window-close\"></i>\n            </span>\n          </p>\n        </>\n      ) : (\n        <>\n          <Link\n            to={{\n              pathname: \"/account\",\n              state: {\n                userId: nweetObj.creatorId,\n                userName: nweetObj.username,\n                userPhoto: nweetObj.photoURL,\n              },\n            }}\n          >\n            <User nweetObj={nweetObj} />\n          </Link>\n          <p className=\"date\">\n            {new Date(nweetObj.createdAt).toLocaleDateString()}\n          </p>\n          <h4 className=\"nweet_content\">{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && (\n            <img src={nweetObj.attachmentUrl} alt=\"nweet\" />\n          )}\n          <div className=\"like_and_comment\">\n            <p className=\"like\" onClick={handleLike}>\n              <i className=\"fas fa-heart\"></i>\n              <span className=\"like_number\">{nweetObj.like}</span>\n            </p>\n            <Comments nweetObj={nweetObj} userObj={userObj} />\n          </div>\n          {isOwner && (\n            <div className=\"nweet_actions\">\n              <span className=\"actions_icon delete\" onClick={onDeleteClick}>\n                <i className=\"far fa-trash-alt delete_icon\"></i>\n                delete\n              </span>\n              <span className=\"actions_icon edit\" onClick={toggleEditing}>\n                <i className=\"far fa-edit edit_icon\"></i>\n                edit\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </li>\n  );\n};\n\nexport default Nweet;\n","import React, { useRef, useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"styles/nweetFactory.css\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const fileRef = useRef();\n\n  const onSubmit = async (event) => {\n    if (nweet === \"\") {\n      return;\n    }\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n\n    const nweetObj = {\n      username: userObj.displayName,\n      photoURL: userObj.photoURL,\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl, //attachment가 없을 땐 빈 문자열을 가짐!\n      like: 0,\n      liked_users: [],\n      comments:[]\n    };\n    await dbService.collection(\"nweets\").add(nweetObj);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n\n    setNweet(value);\n  };\n\n  const onFileChange = (event) => {\n    const theFile = event.target.files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n\n  const onAttachmentClick = () => {\n    setAttachment(\"\");\n    fileRef.current.value = \"\";\n  };\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput_container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <i className=\"fas fa-plus\"></i>\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        ref={fileRef}\n        style={{ opacity: 0 }}\n      />\n\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            alt=\"attachment\"\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onAttachmentClick}>\n            <span>Remove</span>\n            <i className=\"fas fa-times\"></i>\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default NweetFactory;\n","import React, { useEffect, useState } from \"react\";\nimport { dbService } from \"fbase\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\nimport \"styles/home.css\";\n\nconst Home = ({ userObj, darkMode }) => {\n  const [nweets, setNweets] = useState([]);\n\n  useEffect(() => {\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj} darkMode={darkMode}/>\n      <ul className=\"nweets\">\n        {nweets.map((nweet) => {\n          return (\n            <Nweet\n              key={nweet.id}\n              isOwner={nweet.creatorId === userObj.uid}\n              nweetObj={nweet}\n              userObj={userObj}\n              darkMode={darkMode}\n            />\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"styles/navigation.css\";\n\nconst Navigation = ({ userObj }) => {\n  return (\n    <nav>\n      <ul className=\"navigation\">\n        <li className=\"home\">\n          <Link to=\"/\">\n          <i className=\"fas fa-hippo hippo\"></i>\n          <span className=\"homeText\">Home</span>\n          </Link>\n        </li>\n        <li className=\"profile\">\n          <Link to=\"/profile\">\n            <i className=\"fas fa-user user\"></i>\n            <span className=\"profileText\">\n              {userObj.displayName\n                ? `${userObj.displayName}의 Profile`\n                : \"Profile\"}\n            </span>\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { authService, dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"styles/profile.css\";\n\n\nconst Profile = ({ ImageInput, userObj, setUserObj, refreshUser }) => {\n  const history = useHistory();\n  const [newUserObj, setNewUserObj] = useState({\n    displayName: userObj.displayName,\n    photoURL: userObj.photoURL,\n  });\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  const getMyNweets = async () => {\n    await dbService\n      .collection(\"nweets\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .orderBy(\"createdAt\")\n      .get();\n  };\n  useEffect(() => {\n    getMyNweets();\n  }, []);\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewUserObj((data) => ({ ...data, displayName: value }));\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (\n      userObj.displayName !== newUserObj.displayName ||\n      userObj.photoURL !== newUserObj.photoURL\n    ) {\n      await userObj.updateProfile({\n        displayName: newUserObj.displayName,\n        photoURL: newUserObj.photoURL,\n      });\n    }\n    refreshUser();\n  };\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <p className=\"profile_photo\">\n          <img\n            src={newUserObj.photoURL ? newUserObj.photoURL : \"https://www.edmundsgovtech.com/wp-content/uploads/2020/01/default-picture_0_0.png\"}\n            alt={`${userObj.displayName}'s profile`}\n          />\n\n        </p>\n        <ImageInput setNewUserObj={setNewUserObj} />\n        <input\n          className=\"formInput\"\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"Display name\"\n          value={newUserObj.displayName}\n          autoFocus\n        />\n        <input type=\"submit\" value=\"Update Profile\" className=\"formBtn\" />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport \"styles/post.css\";\nconst Post = ({ post_item }) => {\n  console.log(post_item);\n  return (\n    <li className=\"post\">\n      <p className=\"date\">\n        {new Date(post_item.createdAt).toLocaleDateString()}\n      </p>\n      <h4>{post_item.text}</h4>\n      {post_item.attachmentUrl && (\n        <img className=\"post_img\" src={post_item.attachmentUrl} alt=\"nweet\" />\n      )}\n      <div className=\"like_and_comment\">\n        <p className=\"like\">\n          <i className=\"fas fa-heart\"></i>\n          <span className=\"like_number\">{post_item.like}</span>\n        </p>\n      </div>\n    </li>\n  );\n};\n\nexport default Post;\n","import Post from \"components/Post\";\nimport User from \"components/User\";\nimport { dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport 'styles/account.css';\n\nconst Account = () => {\n  const history = useHistory();\n  const [userPost, setUserPost] = useState([]);\n  useEffect(() => {\n    if (!history.location.state) {\n      history.push(\"/\");\n    }\n  }, [history]);\n\n  useEffect(() => {\n    const getUserPost = async () => {\n      if (history.location.state) {\n        const data = await dbService\n          .collection(\"nweets\")\n          .where(\"creatorId\", \"==\", history.location.state.userId)\n          .orderBy(\"createdAt\")\n          .get();\n\n        data.docs.forEach((post) =>\n          setUserPost((prev) => [...prev, post.data()])\n        );\n      }\n    };\n    getUserPost();\n  }, [history.location.state]);\n\n  return (\n    <div className=\"account_wrap\">\n      <User />\n      <ul className=\"user_posts\">\n        {userPost.map((post_item) => {\n          return <Post key={post_item.createdAt} post_item={post_item} />;\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Account;\n","import React, { useEffect } from \"react\";\n\nconst ToggleBtn = ({ darkMode, setDarkMode }) => {\n    const DARK = \"dark\";\n\n    const handleTheme = (isDark) => {\n  \n      if (isDark) {\n        localStorage.setItem(DARK, true);\n      } else {\n        localStorage.setItem(DARK, false);\n      }\n    };\n  \n    const onClick = (e) => {\n      setDarkMode((prev) => {\n        handleTheme(!prev);\n        return !prev;\n      });\n    };\n  \n    useEffect(() => {\n      let ls_theme = JSON.parse(localStorage.getItem(DARK));\n  \n      if (ls_theme !== null) {\n        //localStorage에 theme이 저장되어 있을 때\n        setDarkMode(ls_theme);\n        handleTheme(ls_theme);\n      } else {\n        //localStorage가 비어있을 때\n        console.log(\"localStorage 비어있음\")\n  \n        const darkMode = window.matchMedia(\"(prefers-color-scheme: Dark)\")\n          .matches;\n        setDarkMode(darkMode);\n        handleTheme(darkMode);\n      }\n    }, []);\n  return (\n    <button className={darkMode ? \"mode dark\" : \"mode\"} onClick={onClick}>{darkMode ? \"Light Mode\" : \"Dark Mode\"}</button>\n  );\n};\n\nexport default ToggleBtn;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Navigation from \"components/Navigation\";\nimport Profile from \"routes/Profile\";\nimport Account from \"routes/Account\";\nimport \"styles/router.css\";\nimport ToggleBtn from \"./ToggleBtn\";\n\nconst AppRouter = ({\n  ImageInput,\n  isLoggedIn,\n  userObj,\n  setUserObj,\n  refreshUser,\n}) => {\n  const [darkMode, setDarkMode] = useState(false);\n  const routerRef = useRef();\n\n  useEffect(() => {\n    const body = routerRef.current.parentElement.parentElement;\n    if (darkMode) {\n      body.classList.add(\"dark\");\n    } else {\n      body.classList.remove(\"dark\");\n    }\n  }, [darkMode]);\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <ToggleBtn darkMode={darkMode} setDarkMode={setDarkMode} />\n      <Switch>\n        <>\n          {isLoggedIn ? (\n            <div className=\"router_loggedIn\" ref={routerRef}>\n              <Route exact path=\"/\">\n                <Home darkMode={darkMode} userObj={userObj} />\n              </Route>\n              <Route exact path=\"/profile\">\n                <Profile\n                  ImageInput={ImageInput}\n                  userObj={userObj}\n                  setUserObj={setUserObj}\n                  refreshUser={refreshUser}\n                />\n              </Route>\n              <Route exact path=\"/account\">\n                <Account />\n              </Route>\n            </div>\n          ) : (\n            <div ref={routerRef}>\n              <Route exact path=\"/\">\n                <Auth darkMode={darkMode}/>\n              </Route>\n            </div>\n          )}\n        </>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App({ ImageInput }) {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n          photoURL: user.photoURL,\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          ImageInput={ImageInput}\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n          setUserObj={setUserObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","class ImageUploader {\n    async upload(file) {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      formData.append(\"upload_preset\", \"bq51dxpm\");\n  \n      const result = await fetch(\n        \"https://api.cloudinary.com/v1_1/dlpqcuqbq/upload\",\n        {\n          method: \"POST\",\n          body: formData,\n        }\n      );\n      \n      return await result.json();\n    }\n  }\n  \n  export default ImageUploader;\n  ","import React, { useRef } from \"react\";\nimport \"styles/imageFileInput.css\";\n\nconst ImageFileInput = ({ imageUploader, setNewUserObj, darkTheme }) => {\n  const inputFileRef = useRef();\n\n  const onFileChange = async (event) => {\n    const {\n      currentTarget: { files },\n    } = event;\n\n    const uploaded = await imageUploader.upload(files[0]);\n    setNewUserObj((data) => ({ ...data, photoURL: uploaded.url }));\n  };\n\n  const onClick = (event) => {\n    event.preventDefault();\n    inputFileRef.current.click();\n  };\n  return (\n    <div className=\"image_file\">\n      <input\n        className=\"file_input\"\n        ref={inputFileRef}\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n      />\n      <button className=\"file_button\" onClick={onClick}>\n        Edit\n        <br /> Profile Image\n      </button>\n    </div>\n  );\n};\n\nexport default ImageFileInput;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\nimport \"@fortawesome/fontawesome-free/js/all.js\";\nimport ImageUploader from \"imageUploader\";\nimport ImageFileInput from \"components/ImageFileInput\";\n\nconst imageUploader = new ImageUploader();\nconst ImageInput = (props) => (\n  <ImageFileInput {...props} imageUploader={imageUploader} />\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App ImageInput={ImageInput}/>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}