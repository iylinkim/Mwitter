{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","props","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autofocus","src","alt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","fileRef","useRef","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","htmlFor","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","style","opacity","backgroundImage","current","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","data","Navigation","to","displayName","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","getMyNweets","where","orderBy","get","updateProfile","autoFocus","signOut","push","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e644b11.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DO,\n    projectId: process.env.REACT_APP_PROJECT,\n    storageBucket: process.env.REACT_APP_STORAGE,\n    messagingSenderId: process.env.REACT_APP_MESSAGI,\n    appId: process.env.REACT_APP_APP_ID\n  };\n\n  firebase.initializeApp(firebaseConfig); \n\n  export const firebaseInstance = firebase;\n\n  export const authService = firebase.auth();\n  export const dbService = firebase.firestore();\n  export const storageService = firebase.storage();\n  ","import { authService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst AuthForm = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState();\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        //create account\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        // log in\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => {\n    setNewAccount((prev) => !prev);\n  };\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          className=\"authInput authSubmit\"\n          type=\"submit\"\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>{\" \"}\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React from \"react\";\nimport AuthForm from \"components/AuthForm\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport \"styles/auth.css\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n  return (\n    <div className=\"authContainer\">\n      <i className=\"fab fa-twitter authLogo\"></i>\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google\n          <i className=\"fab fa-google\"></i>\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github\n          <i className=\"fab fa-github\"></i>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n    if (ok) {\n      //delete nweet\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\n    setEditing(false);\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n  return (\n    <li className=\"nweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            <input\n              className=\"formInput\"\n              onChange={onChange}\n              type=\"text\"\n              placeholder=\"Edit your nweet\"\n              value={newNweet}\n              autofocus\n              required\n            />\n            <input className=\"formBtn\" type=\"submit\" value=\"Update Nweet\" />\n          </form>\n          <span className=\"formBtn cancelBtn\" onClick={toggleEditing}>\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} alt=\"nweet\"/>}\n          {isOwner && (\n            <div className=\"nweet_actions\">\n              <span onClick={onDeleteClick}>\n                <i className=\"far fa-trash-alt\"></i>\n                delete\n              </span>\n              <span onClick={toggleEditing}>\n                <i className=\"far fa-edit\"></i>\n                edit\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </li>\n  );\n};\n\nexport default Nweet;\n","import React, { useRef, useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"styles/nweetFactory.css\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const fileRef = useRef();\n\n  const onSubmit = async (event) => {\n    if (nweet === \"\") {\n      return;\n    }\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl, //attachment가 없을 땐 빈 문자열을 가짐!\n    };\n    await dbService.collection(\"nweets\").add(nweetObj);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n\n    setNweet(value);\n  };\n\n  const onFileChange = (event) => {\n    const theFile = event.target.files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n\n  const onAttachmentClick = () => {\n    setAttachment(\"\");\n    fileRef.current.value = \"\";\n  };\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput_container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <i className=\"fas fa-plus\"></i>\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        ref={fileRef}\n        style={{ opacity: 0 }}\n      />\n\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            alt=\"attachment\"\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onAttachmentClick}>\n            <span>Remove</span>\n            <i className=\"fas fa-times\"></i>\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default NweetFactory;\n","import React, { useEffect, useState } from \"react\";\nimport { dbService } from \"fbase\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\nimport \"styles/home.css\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n\n  useEffect(() => {\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj} />\n      <ul className=\"nweets\">\n        {nweets.map((nweet) => {\n          return (\n            <Nweet\n              key={nweet.id}\n              isOwner={nweet.creatorId === userObj.uid}\n              nweetObj={nweet}\n            />\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"styles/navigation.css\";\n\nconst Navigation = ({ userObj }) => {\n  return (\n    <nav>\n      <ul className=\"navigation\">\n        <li className=\"home\">\n          <Link to=\"/\">\n            <i className=\"fab fa-twitter twitter\"></i>\n          </Link>\n        </li>\n        <li className=\"profile\">\n          <Link to=\"/profile\">\n            <i className=\"fas fa-user user\"></i>\n            <span className=\"profileText\">\n              {userObj.displayName\n                ? `${userObj.displayName}의 Profile`\n                : \"Profile\"}\n            </span>\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { authService, dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"styles/profile.css\";\nconst Profile = ({ userObj, refreshUser }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  const getMyNweets = async () => {\n    await dbService\n      .collection(\"nweets\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .orderBy(\"createdAt\")\n      .get();\n  };\n  useEffect(() => {\n    getMyNweets();\n  }, []);\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          className=\"formInput\"\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          autoFocus\n        />\n        <input type=\"submit\" value=\"Update Profile\" className=\"formBtn\" />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Navigation from \"components/Navigation\";\nimport Profile from \"routes/Profile\";\nimport \"styles/router.css\";\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        <>\n          {isLoggedIn ? (\n            <div className=\"router_loggedIn\">\n              <Route exact path=\"/\">\n                <Home userObj={userObj} />\n              </Route>\n              <Route exact path=\"/profile\">\n                <Profile userObj={userObj} refreshUser={refreshUser} />\n              </Route>\n            </div>\n          ) : (\n            <>\n              <Route exact path=\"/\">\n                <Auth />\n              </Route>\n              {/* <Redirect from='*' to='/' />  */}\n            </>\n          )}\n        </>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\nimport '@fortawesome/fontawesome-free/js/all.js';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}